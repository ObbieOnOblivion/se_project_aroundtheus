!function(){"use strict";class e{constructor(e,t){this._options=e,this._formElement=t}_checkFormValidity(e){return e.every((e=>e.validity.valid))}disableButton(){const e=this._options.inactiveButtonClass,t=this._formElement.querySelector(this._options.submitButtonSelector);t.classList.add(e),t.disabled=!0}activateButton(){const e=this._options.inactiveButtonClass,t=this._formElement.querySelector(this._options.submitButtonSelector);t.classList.remove(e),t.disabled=!1}_toggleButtonState(){this._checkFormValidity(this._inputElements)?this.activateButton():this.disableButton()}_showInputError(e){const{inputErrorClass:t,errorClass:s}=this._options,n=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(t),n.textContent=e.validationMessage,n.classList.add(s)}_hideInputError(e){const{inputErrorClass:t,errorClass:s}=this._options,n=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(t),n.textContent="",n.classList.remove(s)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){const{inputSelector:e}=this._options,t=[...this._formElement.querySelectorAll(e)];this._inputElements=t,t.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(t)}))}))}enableValidation(){this._setEventListeners()}}class t{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._container=t,this._renderer=n}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscapeClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal")&&this.close()})),this._popupElement.querySelector(".modal__close-button").addEventListener("click",(()=>{this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this._handleFormSubmit=t,this._form=document.querySelector(e).querySelector("form"),this._inputList=[...this._popupElement.querySelectorAll("input")]}setPreviewedValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}close(){super.close(),this._form.reset()}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupElement.querySelector(".modal__save-button").textContent="Saving..."}))}}var r=class{constructor(e,t,s,n,r,o){this._name=e,this._link=t,this._template=s,this._imageClickHandler=n,this._deleteHandler=r,this._toggleButton=o}_addImageFunctionality(){this._template.querySelector("#gallery__image").addEventListener("click",(()=>{this._imageClickHandler({name:this._name,link:this._link})}))}_addLikeFunctionality(){const e=this._template.querySelector("#gallery__like-button");e.addEventListener("click",(()=>{e.classList.toggle("gallery__like-button_liked"),this._toggleButton(this._name,this._link)}))}_addDeleteFunctionality(){const e=this._template.querySelector("#gallery__trash");e.addEventListener("click",(()=>{this._deleteHandler((()=>{const t=e.closest(".gallery__card");t&&t.remove()}),this._name,this._link)}))}_setEventListeners(){this._addImageFunctionality(),this._addLikeFunctionality(),this._addDeleteFunctionality()}addCard(){this._template=this._template.cloneNode(!0);const e=this._template,t=e.querySelector("#gallery__image");return e.querySelector("#gallery__text").textContent=this._name,t.src=this._link,t.alt=this._name,this._setEventListeners(),this._template}};class o extends s{constructor(e){super({popupSelector:e})}open(e){let{name:t,link:s}=e;super.open(),this._popupElement.querySelector(".modal__picture").src=s,this._popupElement.querySelector("img").alt=t,this._popupElement.querySelector("h4").textContent=t}}class i{constructor(e){let{baseUrl:t,headers:s}=e;this.baseUrl=t,this.headers=s}changeAvatar(e){fetch("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);return e.json()})).then((e=>{console.log("Avatar updated successfully:",e)})).catch((e=>{console.error("Error updating avatar:",e)}))}toggleButtonState(e,t){const s=`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`;console.log("thisisis");const n={method:t?"DELETE":"PUT",headers:this.headers};return fetch(s,n).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);return e.json()})).then((e=>(console.log("Card like status updated successfully:",e),e))).catch((e=>{throw console.error("Error updating card like status:",e),e}))}deleteCard(e){const t=`${this.baseUrl}/cards/${e}`,s={method:"DELETE",headers:this.headers};return fetch(t,s).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);console.log("Resource deleted successfully")})).catch((e=>{throw console.error("Error:",e),e}))}getCardInfo(e,t){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=`${this.baseUrl}/cards`,o={method:"GET",headers:this.headers};return fetch(r,o).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);return e.json()})).then((r=>{const o=[...r].reverse().findIndex((s=>s.name===e&&s.link===t));if(-1!==o){const e=r[r.length-1-o];console.log("Last instance found:",e),s&&this.deleteCard(e._id),console.log(e.isLiked),n&&this.toggleButtonState(e._id,e.isLiked)}else console.log("No instance found with the specified name and link.")})).catch((e=>{throw console.error("Error:",e),e}))}addCardInfo(e,t,s){const n=`${this.baseUrl}/cards`,r={method:"POST",headers:this.headers,body:JSON.stringify({name:e,link:t})};fetch(n,r).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);return e.json()})).then((e=>{s(e.name,e.link)})).catch((e=>{console.error("Error:",e)}))}setUserInfo(e,t){const s=`${this.baseUrl}/users/me`,n={name:e,about:t},r={method:"PATCH",headers:this.headers,body:JSON.stringify(n)};return fetch(s,r).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);return e.json()})).then((e=>e)).catch((e=>{}))}}class a{constructor(e,t){this._nameElement=e,this._aboutMeElement=t}getUserInfo(){return{name:this._nameElement.textContent,about:this._aboutMeElement.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._nameElement.textContent=t,this._aboutMeElement.textContent=s}}class l extends s{constructor(e,t,s){super({popupSelector:e}),this.submitHandler=t,this.apiDelete=s}open(){super.open()}setEventListeners(){document.querySelector(".modal-confirm__save-button").addEventListener("click",(e=>{this.submitHandler(),this.apiDelete(),super.close()}))}}class c extends s{constructor(e,t){super({popupSelector:e}),this.submitHandler=t}open(){super.open()}setEventListeners(){this._popupElement.querySelector("form").addEventListener("submit",(e=>{e.preventDefault();const t=this._popupElement.querySelector(".modal-avatar__input").value;this.submitHandler(t),super.close()}))}}!function(){const s=new i({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9b29ae94-bb6f-470b-bccd-5f1bdf13a16a","Content-Type":"application/json"}}),u=new c(".modal-avatar",(function(e){d.src=e,s.changeAvatar(e)})),d=document.querySelector(".profile__avatar");function h(e,t){s.getCardInfo(e,t,!1,!0)}function p(e,t,n){const r=new l("#confirmation-modal",e,(()=>{s.getCardInfo(t,n,!0)}));r.open(),r.setEventListeners()}d.addEventListener("click",(()=>{u.open(),u.setEventListeners()}));const m=e=>{let{name:t,link:s}=e;T.open({name:t,link:s})},_=document.querySelector("#card-template").content.firstElementChild,E=document.querySelector("#gallery__list"),f=new t({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{x(e.name,e.link,_)}},E);f.renderItems();const v=document.forms["edit-form"],g=document.forms["add-form"],y={formSelector:".modal__container",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"transparent",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},S=new e(y,v),k=new e(y,g);S.enableValidation(),k.enableValidation();const b=document.querySelector("#profile"),L=b.querySelector("#profile__edit_button"),w=b.querySelector("#profile__add_button"),C=b.querySelector("#profile__name"),q=b.querySelector("#profile__description"),I=new a(C,q),T=new o("#picture-modal"),B=new n(`#${v.parentElement.id}`,(function(e){B.close(),s.setUserInfo(e.name,e.description).then((e=>{I.setUserInfo({name:e.name,about:e.about})}))})),j=new n(`#${g.parentElement.id}`,(function(e){let{name:t,description:s}=e;x(t,s,_),j.close()}));function x(e,t,n){s.addCardInfo(e,t,(function(e,t){const s=new r(e,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:n,arguments.length>3&&void 0!==arguments[3]?arguments[3]:m,p,h);f.addItem(s.addCard())}))}T.setEventListeners(),L.addEventListener("click",(()=>{B.setPreviewedValues({name:C.innerText,description:q.innerText}),B.open()})),w.addEventListener("click",(()=>{j.open(),k.disableButton()})),B.setEventListeners(),j.setEventListeners()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,